"""
Django settings for SocialMediaProject project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# import datetime
# from logging.handlers import TimedRotatingFileHandler
# from utilities.auth_utilities import CustomRotatingFileHandler

import os
import logging
from logging.handlers import TimedRotatingFileHandler
from datetime import datetime
import shutil
# from utilities.auth_utilities import CustomRotatingFileHandler
from authentication.custom_log_handlers import CustomTimedRotatingFileHandler


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-x(r)0@9^91)ref2b4m*qtdhi)2qrw7&r01nb575pgk6$_*2%-g"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django_crontab',
    'django_cron',
    "authentication",
    "rest_framework",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "authentication.middleware.custom_middleware.CustomJwtAuthenticationMiddleware",
]

ROOT_URLCONF = "SocialMediaProject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "SocialMediaProject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "SMP",
        "USER": 'postgres',
        "PASSWORD": '1234',
        "HOST":"localhost",
        "PORT":"5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



# MY added

# X-Frame-Options: DENY
X_Frame_Options = 'DENY'


# Define a dynamic log file path using the BASE_DIR
LOGGING_DIR = os.path.join(BASE_DIR, 'logs')

# Ensure the logs directory exists
if not os.path.exists(LOGGING_DIR):
    os.makedirs(LOGGING_DIR)




LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {lineno} {funcName} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },

    'handlers': {
        'timed_rotating_file': {
            'level': 'INFO',
            'class': 'authentication.custom_log_handlers.CustomTimedRotatingFileHandler',
            'filename': os.path.join(LOGGING_DIR, f"SMP_{datetime.now().strftime('%Y%m%d%H%M%S')}.log"),
            'when': 'M',
            'interval': 30,
            'backupCount': 0,  # Do not keep backup files
            'formatter': 'verbose',
            'delay': True,
        },
        'console': {
                'class': 'logging.StreamHandler',
                'formatter': 'verbose',
            },
    },
    'loggers': {
        'timed_rotating_file': {
            'handlers': ['timed_rotating_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },

    
    'root': {
        'handlers': ['timed_rotating_file','console'],
        'level': 'DEBUG',
    },
}


# For send link in the email for forgot password
FRONTEND_URL = 'http://127.0.0.1:8000/user/passwordresetconfirm'

# For send link in the email for verify registration
REGISTER_URL = 'http://127.0.0.1:8000/user/verifyuser'


# For Email (Email host password get from google's -> APP password)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'aayushgajera2000@gmail.com'
EMAIL_HOST_PASSWORD = 'evdsvvnsvqljjrlx'

# For save image to this path
MEDIA_ROOT =  os.path.join(BASE_DIR, 'upload')
MEDIA_URL = '/upload/'

